FROM  quay.io/pypa/manylinux2014_x86_64


RUN yum-config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo &&\
    yum install -y \
    cuda-libraries-11-0-11.0.3-1 \
    cuda-nvtx-11-0-11.0.167-1 \
    libnpp-11-0-11.1.0.245-1 \
    libcublas-11-0-11.2.0.252-1 \
    cuda-nvml-devel-11-0-11.0.167-1 \
    cuda-command-line-tools-11-0-11.0.3-1 \
    libcublas-devel-11-0-11.2.0.252-1 \
    cuda-cudart-devel-11-0-11.0.221-1 \
    cuda-libraries-devel-11-0-11.0.3-1 \
    cuda-minimal-build-11-0-11.0.3-1 \
    cuda-nvprof-11-0-11.0.221-1 \
    libnpp-devel-11-0-11.1.0.245-1 \
    && ln -s cuda-11.0 /usr/local/cuda \
    && yum clean all \
    && rm -rf /var/cache/yum/*


# install protobuf from source
RUN yum install -y autoconf automake libtool curl make gcc-c++ unzip &&\
    yum clean all &&\
    rm -rf /var/cache/yum/* &&\
    curl -O -L -C - https://github.com/protocolbuffers/protobuf/releases/download/v3.13.0/protobuf-cpp-3.13.0.tar.gz && \
    tar xf protobuf-cpp-3.13.0.tar.gz && rm protobuf-cpp-3.13.0.tar.gz && cd protobuf-3.13.0 && ./autogen.sh && ./configure "CFLAGS=-fPIC" "CXXFLAGS=-fPIC" && \
    make -j && make install && ldconfig && cd .. && rm -rf protobuf-3.13.0

# install cmake
RUN mkdir cmake && cd cmake && \
    curl -O -L -C - https://github.com/Kitware/CMake/releases/download/v3.18.2/cmake-3.18.2-Linux-x86_64.sh && \
    sh cmake-3.18.2-Linux-x86_64.sh --skip-license && rm cmake-3.18.2-Linux-x86_64.sh && ln -s /cmake/bin/cmake /usr/bin/cmake

# nvidia-docker 1.0
RUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf


ENV LIBRARY_PATH /usr/local/cuda/lib64/stubs:${LIBRARY_PATH}
ENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}

